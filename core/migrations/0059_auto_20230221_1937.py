# Generated by Django 3.2.17 on 2023-02-22 00:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('core', '0058_fix_blogpost_featured_image_description'),
    ]

    operations = [
        migrations.AddField(
            model_name='user',
            name='saved_announcements',
            field=models.ManyToManyField(blank=True, to='core.Announcement'),
        ),
        migrations.AddField(
            model_name='user',
            name='saved_blogs',
            field=models.ManyToManyField(blank=True, to='core.BlogPost'),
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('object_id', models.PositiveIntegerField(help_text='The id of the object this comment is on')),
                ('author', models.ForeignKey(on_delete=models.SET(None), to=settings.AUTH_USER_MODEL)),
                ('content_type', models.ForeignKey(help_text='The type of object this comment is on (core | blog post or core | announcement)', on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('object_id', models.PositiveIntegerField(help_text='The id of the object this comment is on')),
                ('body', models.TextField(max_length=512)),
                ('live', models.BooleanField(default=True, help_text='Shown publicly?')),
                ('author', models.ForeignKey(on_delete=models.SET(None), to=settings.AUTH_USER_MODEL)),
                ('content_type', models.ForeignKey(help_text='The type of object this comment is on (core | blog post or core | announcement)', on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('likes', models.ManyToManyField(blank=True, help_text='The users who liked this comment', to='core.Like')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='core.comment')),
            ],
            options={
                'ordering': ['created'],
                'permissions': (('view_nodelay', 'View without delay'),),
            },
        ),
        migrations.AddField(
            model_name='announcement',
            name='likes',
            field=models.ManyToManyField(blank=True, to='core.Like'),
        ),
        migrations.AddField(
            model_name='blogpost',
            name='likes',
            field=models.ManyToManyField(blank=True, to='core.Like'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['content_type', 'object_id'], name='core_commen_content_37d5bd_idx'),
        ),
    ]
